name: autodevops-go-docker

on:
  push:
    branches:
      - master
      - main
  pull_request:
    branches:
      - master
      - main
  workflow_dispatch:

concurrency:
  group: autodevops-go-docker-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

permissions:
  contents: read
  security-events: write

jobs:
  codeql-analysis:
    name: Code Scanning (GitHub CodeQL)
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v2
        with:
          languages: go

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2

  static-code-analysis:
    name: Static Code Analysis & Security Scanning
    runs-on: ubuntu-latest
    timeout-minutes: 20
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '^1.21'

      - name: Download Dependencies
        run: go mod download

      - name: Pull securego/gosec:2.18.2
        run: docker pull securego/gosec:2.18.2

      - name: Run go vet
        run: go vet ./...

      - name: Run GolangCI-Lint
        id: lint
        uses: golangci/golangci-lint-action@v4
        with:
          version: v1.54
          args: --timeout 3m --out-format=github-actions --out-format json --out-output golangci-lint-report.json
        continue-on-error: true

      - name: Upload GolangCI-Lint Report
        if: always() && (steps.lint.outputs.exit_code != '0')
        uses: actions/upload-artifact@v4
        with:
          name: golangci-lint-report
          path: golangci-lint-report.json
          if-no-files-found: ignore

      - name: Fail Pipeline On Lint Errors
        if: steps.lint.outputs.exit_code != '0'
        run: |
          echo "Detected one or more linting errors in codebase."
          cat golangci-lint-report.json || true
          exit 1

      - name: Run Gosec
        if: steps.lint.outputs.exit_code == '0'
        run: |
          set -e
          docker run --rm -v "${{ github.workspace }}:/src" securego/gosec:2.18.2 -fmt sarif -out results-gosec.sarif ./... || { echo "Gosec found vulnerabilities or failed."; cat results-gosec.sarif || true; exit 1; }

      - name: Upload Gosec Sarif Report
        if: steps.lint.outputs.exit_code == '0' && (success() || failure())
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: results-gosec.sarif
